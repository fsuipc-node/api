import { Type } from 'fsuipc';

import { OffsetCategory } from '@shared/offset-category';
import { OffsetList } from '@shared/offset-list';
import { Offset } from '@shared/offset';

export const weather: OffsetList = {
  metarStationAltitude: new Offset({
    value: 0x4B4,
    name: 'metarStationAltitude',
    category: OffsetCategory.WEATHER,
    description: 'METAR station altitude - ft',
    type: Type.UInt16,
    convert: '+({VAL} * 3.28084).toFixed(2)',
    permission: 'r',
  }),
  windSurfaceTurbulenceGustSpeed: new Offset({
    value: 0x4BA,
    name: 'windSurfaceTurbulenceGustSpeed',
    category: OffsetCategory.WEATHER,
    description: 'METAR station altitude - kt',
    type: Type.UInt16,
    convert: '+({VAL}).toFixed(2)',
    permission: 'r',
  }),
  metarBarometricDrift: new Offset({
    value: 0x4BC,
    name: 'metarBarometricDrift',
    category: OffsetCategory.WEATHER,
    description: 'METAR barometric drift - difference between aircraft/METAR QNH. Adding drift will give correct value for ATIS report',
    type: Type.UInt16,
    convert: '{VAL} / 16',
    permission: 'r',
  }),
  metarVisibility: new Offset({
    value: 0x4C0,
    name: 'metarVisibility',
    category: OffsetCategory.WEATHER,
    description: 'METAR visibility - sm',
    type: Type.UInt16,
    convert: '{VAL} / 100',
    permission: 'r',
  }),
  metarCloudThunderBase: new Offset({
    value: 0x4C2,
    name: 'metarCloudThunderBase',
    category: OffsetCategory.WEATHER,
    description: 'METAR visibility - ft',
    type: Type.UInt16,
    convert: '+({VAL} * 3.28084).toFixed(2)',
    permission: 'r',
  }),
  metarCloudBaseLow: new Offset({
    value: 0x4C4,
    name: 'metarCloudBaseLow',
    category: OffsetCategory.WEATHER,
    description: 'METAR cloud base low - ft',
    type: Type.UInt16,
    convert: '+({VAL} * 3.28084).toFixed(2)',
    permission: 'r',
  }),
  metarCloudBaseHigh: new Offset({
    value: 0x4C6,
    name: 'metarCloudBaseHigh',
    category: OffsetCategory.WEATHER,
    description: 'METAR cloud base high - ft',
    type: Type.UInt16,
    convert: '+({VAL} * 3.28084).toFixed(2)',
    permission: 'r',
  }),
  dewPoint: new Offset({
    value: 0x4C8,
    name: 'dewPoint',
    category: OffsetCategory.WEATHER,
    description: 'dew point - FS2000+',
    type: Type.Int16,
    convert: '{VAL} / 256',
    permission: 'r',
  }),
  precipitationRate: new Offset({
    value: 0x4C8,
    name: 'precipitationRate',
    category: OffsetCategory.WEATHER,
    description: 'precipitation rate - FS2000+ - 0 to 5',
    type: Type.Byte,
    permission: 'r',
  }),
  precipitationType: new Offset({
    value: 0x4CC,
    name: 'precipitationType',
    category: OffsetCategory.WEATHER,
    description: 'precipitation type - FS2000+ - 0 to 5',
    type: Type.Byte,
    convert: 'precipitationType',
    mapping: true,
    permission: 'r',
  }),
  cloudThunderCoverage: new Offset({
    value: 0x4CD,
    name: 'cloudThunderCoverage',
    category: OffsetCategory.WEATHER,
    description: 'cloud thunder coverage - octa',
    type: Type.Byte,
    permission: 'r',
  }),
  cloudLowCoverage: new Offset({
    value: 0x4CE,
    name: 'cloudLowCoverage',
    category: OffsetCategory.WEATHER,
    description: 'cloud low coverage - octa',
    type: Type.Byte,
    permission: 'r',
  }),
  cloudHighCoverage: new Offset({
    value: 0x4CF,
    name: 'cloudHighCoverage',
    category: OffsetCategory.WEATHER,
    description: 'cloud high coverage - octa',
    type: Type.Byte,
    permission: 'r',
  }),
  precipitationControl: new Offset({
    value: 0x4D2,
    name: 'precipitationControl',
    category: OffsetCategory.WEATHER,
    description: 'hi-byte type 0-2 - low-byte rate 0-5 - writing 0xFFFF release control',
    type: Type.UInt16,
    permission: 'w',
  }),
  dewPointControl: new Offset({
    value: 0x4D4,
    name: 'dewPointControl',
    category: OffsetCategory.WEATHER,
    description: 'degrees / 256 - 0x8000 release control',
    type: Type.UInt16,
    permission: 'w',
  }),
  surfaceWindSpeed: new Offset({
    value: 0x4D8,
    name: 'surfaceWindSpeed',
    category: OffsetCategory.WEATHER,
    description: 'surface wind speed - FS2000+ - kts',
    type: Type.UInt16,
    permission: 'r',
  }),
  surfaceWindDirection: new Offset({
    value: 0x4DA,
    name: 'surfaceWindDirection',
    category: OffsetCategory.WEATHER,
    description: 'surface wind direction - FS2000+ - deg MAG',
    type: Type.UInt16,
    convert: '+({VAL} * 360 / 65536).toFixed(2)',
    permission: 'r',
  }),
  unlimitedVisibility: new Offset({
    value: 0xBF8,
    name: 'unlimitedVisibility',
    category: OffsetCategory.WEATHER,
    description: 'unlimited visibility value - sm',
    type: Type.Int32,
    convert: '+({VAL} / 1600).toFixed(2)',
    permission: 'rw',
  }),
  cloudTypeAtAircraftAltitude: new Offset({
    value: 0xE84,
    name: 'cloudTypeAtAircraftAltitude',
    category: OffsetCategory.WEATHER,
    description: 'cloud type at aircraft atltitude - 0-10',
    type: Type.Byte,
    permission: 'r',
  }),
  cloudCoverageAtAircraftAltitude: new Offset({
    value: 0xE85,
    name: 'cloudCoverageAtAircraftAltitude',
    category: OffsetCategory.WEATHER,
    description: 'cloud coverage at aircraft atltitude - okta',
    type: Type.Byte,
    permission: 'r',
  }),
  cloudIcingAtAircraftAltitude: new Offset({
    value: 0xE86,
    name: 'cloudIcingAtAircraftAltitude',
    category: OffsetCategory.WEATHER,
    description: 'cloud icing at aircraft atltitude - 0-4',
    type: Type.UInt16,
    permission: 'r',
  }),
  cloudTurbulenceAtAircraftAltitude: new Offset({
    value: 0xE88,
    name: 'cloudTurbulenceAtAircraftAltitude',
    category: OffsetCategory.WEATHER,
    description: 'cloud turbulence at aircraft atltitude - 0-255',
    type: Type.UInt16,
    permission: 'r',
  }),
  visibility: new Offset({
    value: 0xE8A,
    name: 'visibility',
    category: OffsetCategory.WEATHER,
    description: 'current visibility - sm',
    convert: '+({VAL} / 100).toFixed(2)',
    type: Type.Int16,
    permission: 'r',
  }),
  OAT: new Offset({
    value: 0xE8C,
    name: 'OAT',
    category: OffsetCategory.WEATHER,
    description: 'current outside air temperature (OAT) - celsius',
    convert: 'Math.round({VAL} / 256)',
    type: Type.Int16,
    permission: 'r',
  }),
  interpolatedDewPoint: new Offset({
    value: 0xE8E,
    name: 'interpolatedDewPoint',
    category: OffsetCategory.WEATHER,
    description: 'dew point interpolated for aircraft altitude - celsius',
    convert: 'Math.round({VAL} / 256)',
    type: Type.Int16,
    permission: 'r',
  }),
  windSpeed: new Offset({
    value: 0xE90,
    name: 'windSpeed',
    category: OffsetCategory.WEATHER,
    description: 'wind speed at aircraft - kt',
    type: Type.UInt16,
    permission: 'r',
  }),
  windDirection: new Offset({
    value: 0xE92,
    name: 'windDirection',
    category: OffsetCategory.WEATHER,
    description: 'wind direction at aircraft - TRUE degrees',
    convert: '+({VAL} * 360 / 65536).toFixed(2)',
    type: Type.UInt16,
    permission: 'r',
  }),
  windGust: new Offset({
    value: 0xE94,
    name: 'windGust',
    category: OffsetCategory.WEATHER,
    description: 'wind gust at aircraft - kt',
    type: Type.UInt16,
    permission: 'r',
  }),
  windDirectionalVariation: new Offset({
    value: 0xE96,
    name: 'windDirectionalVariation',
    category: OffsetCategory.WEATHER,
    description: 'wind directional variation at aircraft - TRUE degrees',
    convert: '+({VAL} * 360 / 65536).toFixed(2)',
    type: Type.UInt16,
    permission: 'r',
  }),
  windTurbulence: new Offset({
    value: 0xE98,
    name: 'windTurbulence',
    category: OffsetCategory.WEATHER,
    description: 'wind turbulence at aircraft atltitude - 0-255',
    type: Type.UInt16,
    permission: 'r',
  }),
  upperCloudCeiling: new Offset({
    value: 0xE9A,
    name: 'upperCloudCeiling',
    category: OffsetCategory.WEATHER,
    description: 'upper cloud layer ceiling - ft',
    convert: '+({VAL} * 3.28084).toFixed(2)',
    type: Type.UInt16,
    permission: 'r',
  }),
  upperCloudBase: new Offset({
    value: 0xE9C,
    name: 'upperCloudBase',
    category: OffsetCategory.WEATHER,
    description: 'upper cloud layer base - ft',
    convert: '+({VAL} * 3.28084).toFixed(2)',
    type: Type.UInt16,
    permission: 'r',
  }),
  upperCloudCoverage: new Offset({
    value: 0xE9E,
    name: 'upperCloudCoverage',
    category: OffsetCategory.WEATHER,
    description: 'upper cloud layer coverage - oktas',
    convert: 'Math.round(({VAL} + 1) / 8192)',
    type: Type.UInt16,
    permission: 'r',
  }),
  upperCloudVariation: new Offset({
    value: 0xEA0,
    name: 'upperCloudVariation',
    category: OffsetCategory.WEATHER,
    description: 'upper cloud layer variation - ft',
    convert: '+({VAL} * 3.28084).toFixed(2)',
    type: Type.UInt16,
    permission: 'r',
  }),
  lowerCloudCeiling: new Offset({
    value: 0xEA2,
    name: 'lowerCloudCeiling',
    category: OffsetCategory.WEATHER,
    description: 'lower cloud layer ceiling - ft',
    convert: '+({VAL} * 3.28084).toFixed(2)',
    type: Type.UInt16,
    permission: 'r',
  }),
  lowerCloudBase: new Offset({
    value: 0xEA4,
    name: 'lowerCloudBase',
    category: OffsetCategory.WEATHER,
    description: 'lower cloud layer base - ft',
    convert: '+({VAL} * 3.28084).toFixed(2)',
    type: Type.UInt16,
    permission: 'r',
  }),
  lowerCloudCoverage: new Offset({
    value: 0xEA6,
    name: 'lowerCloudCoverage',
    category: OffsetCategory.WEATHER,
    description: 'lower cloud layer coverage - oktas',
    convert: 'Math.round(({VAL} + 1) / 8192)',
    type: Type.UInt16,
    permission: 'r',
  }),
  lowerCloudVariation: new Offset({
    value: 0xEA8,
    name: 'lowerCloudVariation',
    category: OffsetCategory.WEATHER,
    description: 'lower cloud layer variation - ft',
    convert: '+({VAL} * 3.28084).toFixed(2)',
    type: Type.UInt16,
    permission: 'r',
  }),
  stormCloudCeiling: new Offset({
    value: 0xEAA,
    name: 'stormCloudCeiling',
    category: OffsetCategory.WEATHER,
    description: 'storm cloud layer ceiling - ft',
    convert: '+({VAL} * 3.28084).toFixed(2)',
    type: Type.UInt16,
    permission: 'r',
  }),
  stormCloudBase: new Offset({
    value: 0xEAC,
    name: 'stormCloudBase',
    category: OffsetCategory.WEATHER,
    description: 'storm cloud layer base - ft',
    convert: '+({VAL} * 3.28084).toFixed(2)',
    type: Type.UInt16,
    permission: 'r',
  }),
  stormCloudCoverage: new Offset({
    value: 0xEAE,
    name: 'stormCloudCoverage',
    category: OffsetCategory.WEATHER,
    description: 'storm cloud layer coverage - oktas',
    convert: 'Math.round(({VAL} + 1) / 8192)',
    type: Type.UInt16,
    permission: 'r',
  }),
  stormCloudVariation: new Offset({
    value: 0xEB0,
    name: 'stormCloudVariation',
    category: OffsetCategory.WEATHER,
    description: 'storm cloud layer variation - ft',
    convert: '+({VAL} * 3.28084).toFixed(2)',
    type: Type.UInt16,
    permission: 'r',
  }),
  upperTemperatureLevel: new Offset({
    value: 0xEB2,
    name: 'upperTemperatureLevel',
    category: OffsetCategory.WEATHER,
    description: 'upper temperature level - ft',
    convert: '+({VAL} * 3.28084).toFixed(2)',
    type: Type.UInt16,
    permission: 'r',
  }),
  upperTemperature: new Offset({
    value: 0xEB4,
    name: 'upperTemperature',
    category: OffsetCategory.WEATHER,
    description: 'upper temperature - degrees C',
    convert: 'Math.round({VAL} / 256)',
    type: Type.Int16,
    permission: 'r',
  }),
  middleTemperatureLevel: new Offset({
    value: 0xEB6,
    name: 'middleTemperatureLevel',
    category: OffsetCategory.WEATHER,
    description: 'middle temperature level - ft',
    convert: '+({VAL} * 3.28084).toFixed(2)',
    type: Type.UInt16,
    permission: 'r',
  }),
  middleTemperature: new Offset({
    value: 0xEB8,
    name: 'middleTemperature',
    category: OffsetCategory.WEATHER,
    description: 'middle temperature - degrees C',
    convert: 'Math.round({VAL} / 256)',
    type: Type.Int16,
    permission: 'r',
  }),
  lowerTemperatureLevel: new Offset({
    value: 0xEBA,
    name: 'lowerTemperatureLevel',
    category: OffsetCategory.WEATHER,
    description: 'lower temperature level - ft',
    convert: '+({VAL} * 3.28084).toFixed(2)',
    type: Type.UInt16,
    permission: 'r',
  }),
  lowerTemperature: new Offset({
    value: 0xEBC,
    name: 'lowerTemperature',
    category: OffsetCategory.WEATHER,
    description: 'lower temperature - degrees C',
    convert: 'Math.round({VAL} / 256)',
    type: Type.Int16,
    permission: 'r',
  }),
  surfaceTemperatureLevel: new Offset({
    value: 0xEBE,
    name: 'surfaceTemperatureLevel',
    category: OffsetCategory.WEATHER,
    description: 'surface temperature level - ground elevation - ft',
    convert: '+({VAL} * 3.28084).toFixed(2)',
    type: Type.UInt16,
    permission: 'r',
  }),
  surfaceTemperature: new Offset({
    value: 0xEC0,
    name: 'surfaceTemperature',
    category: OffsetCategory.WEATHER,
    description: 'surface temperature - degrees C',
    convert: 'Math.round({VAL} / 256)',
    type: Type.Int16,
    permission: 'r',
  }),
  temperatureDrift: new Offset({
    value: 0xEC2,
    name: 'temperatureDrift',
    category: OffsetCategory.WEATHER,
    description: 'temperature drift - degrees C',
    convert: 'Math.round({VAL} / 256)',
    type: Type.Int16,
    permission: 'r',
  }),
  temperatureDayNightVariation: new Offset({
    value: 0xEC4,
    name: 'temperatureDayNightVariation',
    category: OffsetCategory.WEATHER,
    description: 'temperature day night variation - degrees C',
    convert: 'Math.round({VAL} / 256)',
    type: Type.Int16,
    permission: 'r',
  }),
  pressureQNH: new Offset({
    value: 0xEC6,
    name: 'pressureQNH',
    category: OffsetCategory.WEATHER,
    description: 'pressure QNH - mb',
    convert: 'Math.round({VAL} / 16)',
    type: Type.UInt16,
    permission: 'r',
  }),
  pressureDrift: new Offset({
    value: 0xEC8,
    name: 'pressureDrift',
    category: OffsetCategory.WEATHER,
    description: 'pressure drift - mb',
    convert: 'Math.round({VAL} / 16)',
    type: Type.Int16,
    permission: 'r',
  }),
  upperWindCeiling: new Offset({
    value: 0xECA,
    name: 'upperWindCeiling',
    category: OffsetCategory.WEATHER,
    description: 'upper wind ceiling - ft',
    convert: '+({VAL} * 3.28084).toFixed(2)',
    type: Type.UInt16,
    permission: 'r',
  }),
  upperWindBase: new Offset({
    value: 0xECC,
    name: 'upperWindBase',
    category: OffsetCategory.WEATHER,
    description: 'upper wind ceiling - ft',
    convert: '+({VAL} * 3.28084).toFixed(2)',
    type: Type.UInt16,
    permission: 'r',
  }),
  upperWindSpeed: new Offset({
    value: 0xECE,
    name: 'upperWindSpeed',
    category: OffsetCategory.WEATHER,
    description: 'upper wind ceiling - kt',
    type: Type.UInt16,
    permission: 'r',
  }),
  upperWindDirection: new Offset({
    value: 0xED0,
    name: 'upperWindDirection',
    category: OffsetCategory.WEATHER,
    description: 'upper wind ceiling - TRUE degrees',
    convert: '+({VAL} * 360 / 65536).toFixed(2)',
    type: Type.UInt16,
    permission: 'r',
  }),
  upperWindTurbulence: new Offset({
    value: 0xED2,
    name: 'upperWindTurbulence',
    category: OffsetCategory.WEATHER,
    description: 'upper wind turbulence - 0-255',
    type: Type.UInt16,
    permission: 'r',
  }),
  upperWindGustEnabled: new Offset({
    value: 0xED4,
    name: 'upperWindGustEnabled',
    category: OffsetCategory.WEATHER,
    description: 'upper wind gust enabled',
    convert: '!!{VAL}',
    type: Type.UInt16,
    permission: 'r',
  }),
  middleWindCeiling: new Offset({
    value: 0xED6,
    name: 'middleWindCeiling',
    category: OffsetCategory.WEATHER,
    description: 'middle wind ceiling - ft',
    convert: '+({VAL} * 3.28084).toFixed(2)',
    type: Type.UInt16,
    permission: 'r',
  }),
  middleWindBase: new Offset({
    value: 0xED8,
    name: 'middleWindBase',
    category: OffsetCategory.WEATHER,
    description: 'middle wind ceiling - ft',
    convert: '+({VAL} * 3.28084).toFixed(2)',
    type: Type.UInt16,
    permission: 'r',
  }),
  middleWindSpeed: new Offset({
    value: 0xEDA,
    name: 'middleWindSpeed',
    category: OffsetCategory.WEATHER,
    description: 'middle wind ceiling - kt',
    type: Type.UInt16,
    permission: 'r',
  }),
  middleWindDirection: new Offset({
    value: 0xEDC,
    name: 'middleWindDirection',
    category: OffsetCategory.WEATHER,
    description: 'middle wind ceiling - TRUE degrees',
    convert: '+({VAL} * 360 / 65536).toFixed(2)',
    type: Type.UInt16,
    permission: 'r',
  }),
  middleWindTurbulence: new Offset({
    value: 0xEDE,
    name: 'middleWindTurbulence',
    category: OffsetCategory.WEATHER,
    description: 'middle wind turbulence - 0-255',
    type: Type.UInt16,
    permission: 'r',
  }),
  middleWindGustEnabled: new Offset({
    value: 0xEE0,
    name: 'middleWindGustEnabled',
    category: OffsetCategory.WEATHER,
    description: 'middle wind gust enabled',
    convert: '!!{VAL}',
    type: Type.UInt16,
    permission: 'r',
  }),
  lowerWindCeiling: new Offset({
    value: 0xEE2,
    name: 'lowerWindCeiling',
    category: OffsetCategory.WEATHER,
    description: 'lower wind ceiling - ft',
    convert: '+({VAL} * 3.28084).toFixed(2)',
    type: Type.UInt16,
    permission: 'r',
  }),
  lowerWindBase: new Offset({
    value: 0xEE4,
    name: 'lowerWindBase',
    category: OffsetCategory.WEATHER,
    description: 'lower wind ceiling - ft',
    convert: '+({VAL} * 3.28084).toFixed(2)',
    type: Type.UInt16,
    permission: 'r',
  }),
  lowerWindSpeed: new Offset({
    value: 0xEE6,
    name: 'lowerWindSpeed',
    category: OffsetCategory.WEATHER,
    description: 'lower wind ceiling - kt',
    type: Type.UInt16,
    permission: 'r',
  }),
  lowerWindDirection: new Offset({
    value: 0xEE8,
    name: 'lowerWindDirection',
    category: OffsetCategory.WEATHER,
    description: 'lower wind ceiling - TRUE degrees',
    convert: '+({VAL} * 360 / 65536).toFixed(2)',
    type: Type.UInt16,
    permission: 'r',
  }),
  lowerWindTurbulence: new Offset({
    value: 0xEEA,
    name: 'lowerWindTurbulence',
    category: OffsetCategory.WEATHER,
    description: 'lower wind turbulence - 0-255',
    type: Type.UInt16,
    permission: 'r',
  }),
  lowerWindGustEnabled: new Offset({
    value: 0xEEC,
    name: 'lowerWindGustEnabled',
    category: OffsetCategory.WEATHER,
    description: 'lower wind gust enabled',
    convert: '!!{VAL}',
    type: Type.Int16,
    permission: 'r',
  }),
  surfaceWindCeiling: new Offset({
    value: 0xEEE,
    name: 'surfaceWindCeiling',
    category: OffsetCategory.WEATHER,
    description: 'surface wind ceiling - ft',
    convert: '+({VAL} * 3.28084).toFixed(2)',
    type: Type.UInt16,
    permission: 'r',
  }),
  surfaceWindTurbulence: new Offset({
    value: 0xEF4,
    name: 'surfaceWindTurbulence',
    category: OffsetCategory.WEATHER,
    description: 'surface wind turbulence - 0-255',
    type: Type.UInt16,
    permission: 'r',
  }),
  surfaceWindGustEnabled: new Offset({
    value: 0xEF6,
    name: 'surfaceWindGustEnabled',
    category: OffsetCategory.WEATHER,
    description: 'surface wind gust enabled',
    convert: '!!{VAL}',
    type: Type.UInt16,
    permission: 'r',
  }),
  upperCloudType: new Offset({
    value: 0xEF8,
    name: 'upperCloudType',
    category: OffsetCategory.WEATHER,
    description: 'upper cloud type',
    convert: 'cloudType',
    mapping: true,
    type: Type.UInt16,
    permission: 'r',
  }),
  upperCloudIcing: new Offset({
    value: 0xEFA,
    name: 'upperCloudIcing',
    category: OffsetCategory.WEATHER,
    description: 'upper cloud icing',
    convert: '!!{VAL}',
    type: Type.UInt16,
    permission: 'r',
  }),
  upperCloudTurbulence: new Offset({
    value: 0xEFC,
    name: 'upperCloudTurbulence',
    category: OffsetCategory.WEATHER,
    description: 'upper cloud turbulence - 0-255',
    type: Type.UInt16,
    permission: 'r',
  }),
  lowerCloudType: new Offset({
    value: 0xEFE,
    name: 'lowerCloudType',
    category: OffsetCategory.WEATHER,
    description: 'lower cloud type',
    convert: 'cloudType',
    mapping: true,
    type: Type.UInt16,
    permission: 'r',
  }),
  lowerCloudIcing: new Offset({
    value: 0xF00,
    name: 'lowerCloudIcing',
    category: OffsetCategory.WEATHER,
    description: 'lower cloud icing',
    convert: '!!{VAL}',
    type: Type.UInt16,
    permission: 'r',
  }),
  lowerCloudTurbulence: new Offset({
    value: 0xF02,
    name: 'lowerCloudTurbulence',
    category: OffsetCategory.WEATHER,
    description: 'lower cloud turbulence - 0-255',
    type: Type.UInt16,
    permission: 'r',
  }),
  stormCloudType: new Offset({
    value: 0xF04,
    name: 'stormCloudType',
    category: OffsetCategory.WEATHER,
    description: 'storm cloud type',
    convert: 'cloudType',
    mapping: true,
    type: Type.UInt16,
    permission: 'r',
  }),
  stormCloudIcing: new Offset({
    value: 0xF06,
    name: 'stormCloudIcing',
    category: OffsetCategory.WEATHER,
    description: 'storm cloud icing',
    convert: '!!{VAL}',
    type: Type.UInt16,
    permission: 'r',
  }),
  stormCloudTurbulence: new Offset({
    value: 0xF08,
    name: 'stormCloudTurbulence',
    category: OffsetCategory.WEATHER,
    description: 'storm cloud turbulence - 0-255',
    type: Type.UInt16,
    permission: 'r',
  }),
};
